{"ast":null,"code":"var _jsxFileName = \"/Users/teja/Desktop/notes_frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [id]);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${id}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: \"PUT\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let handleSubmit = () => {\n    updateNote();\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"/3voXICNDLOuUq1zzXpHBYDVNYU=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useHistory","ReactComponent","ArrowLeft","Link","jsxDEV","_jsxDEV","NotePage","_s","id","history","note","setNote","getNote","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","handleSubmit","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["/Users/teja/Desktop/notes_frontend/src/pages/NotePage.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { useParams, useHistory } from 'react-router';\nimport {ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\nimport { Link } from 'react-router-dom'\n\nconst NotePage = () => {\n    const { id } = useParams();\n    const history = useHistory();\n    let [note,setNote] = useState(null) \n\nuseEffect(() =>{\ngetNote();\n},[id]);\n    \nlet getNote = async () => {\nlet response = await fetch(`/api/notes/${id}/`)\nlet data = await response.json()\nsetNote(data)\n}\n\nlet updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`,{\n      method: \"PUT\",\n      headers: {\n          'Content-Type':'application/json'\n            },\n        body: JSON.stringify(note)\n    })\n}\n\n  let handleSubmit = () => {\n    updateNote ()\n    history.push('/')\n  }\n\n\n  return (\n    <div className='note'>\n      <div className='note-header'>\n        <h3>\n          <ArrowLeft onClick={handleSubmit}/>\n          </h3>\n      </div>\n        <textarea onChange={(e) =>{setNote({...note, 'body':e.target.value})}} defaultValue={note?.body}></textarea>\n    </div>\n  )\n  }\n\nexport default NotePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC/C,SAASC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AACpD,SAAQC,cAAc,IAAIC,SAAS,QAAO,0BAA0B;AACpE,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,OAAO,GAAGT,UAAU,CAAC,CAAC;EAC5B,IAAI,CAACU,IAAI,EAACC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEvCC,SAAS,CAAC,MAAK;IACfc,OAAO,CAAC,CAAC;EACT,CAAC,EAAC,CAACJ,EAAE,CAAC,CAAC;EAEP,IAAII,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaN,EAAG,GAAE,CAAC;IAC/C,IAAIO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,OAAO,CAACI,IAAI,CAAC;EACb,CAAC;EAED,IAAIE,UAAU,GAAG,MAAAA,CAAA,KAAY;IACzBH,KAAK,CAAE,cAAaN,EAAG,UAAS,EAAC;MAC/BU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAC;MACb,CAAC;MACLC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC;EAEC,IAAIa,YAAY,GAAGA,CAAA,KAAM;IACvBN,UAAU,CAAE,CAAC;IACbR,OAAO,CAACe,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC;EAGD,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBrB,OAAA;MAAKoB,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BrB,OAAA;QAAAqB,QAAA,eACErB,OAAA,CAACH,SAAS;UAACyB,OAAO,EAAEJ;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACJ1B,OAAA;MAAU2B,QAAQ,EAAGC,CAAC,IAAI;QAACtB,OAAO,CAAC;UAAC,GAAGD,IAAI;UAAE,MAAM,EAACuB,CAAC,CAACC,MAAM,CAACC;QAAK,CAAC,CAAC;MAAA,CAAE;MAACC,YAAY,EAAE1B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEU;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3G,CAAC;AAER,CAAC;AAAAxB,EAAA,CAzCGD,QAAQ;EAAA,QACKP,SAAS,EACRC,UAAU;AAAA;AAAAqC,EAAA,GAFxB/B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}