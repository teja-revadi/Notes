{"ast":null,"code":"var _jsxFileName = \"/Users/teja/Desktop/notes_frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = ({\n  match\n}) => {\n  _s();\n  let noteId = match.params.id;\n  console.log('Note ID:', noteId);\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    getNote();\n  }, [noteId]);\n  let getNote = async () => {\n    let response = await fetch(`/api/notes/${noteId}/`);\n    let data = await response.json();\n    setNote(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: noteId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"/hREPzP6KCpIBUV/BtM/5eUiYj8=\");\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["useParams","React","useState","useEffect","jsxDEV","_jsxDEV","NotePage","match","_s","noteId","params","id","console","log","note","setNote","getNote","response","fetch","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","$RefreshReg$"],"sources":["/Users/teja/Desktop/notes_frontend/src/pages/NotePage.js"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport React, {useState,useEffect} from 'react'\n\nconst NotePage = ({match}) => {\n    let noteId = match.params.id\n    console.log('Note ID:', noteId);\n    let [note,setNote] = useState(null) \n\nuseEffect(() =>{\ngetNote();\n},[noteId]);\n    \nlet getNote = async () => {\nlet response = await fetch(`/api/notes/${noteId}/`)\nlet data = await response.json()\nsetNote(data)\n}\n\n\n  return (\n    <div>\n        <h1>{noteId}</h1>\n        <p>{note?.body}</p>\n    </div>\n  )\n}\n\nexport default NotePage"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,IAAGC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,IAAIC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAACC,EAAE;EAC5BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,MAAM,CAAC;EAC/B,IAAI,CAACK,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEvCC,SAAS,CAAC,MAAK;IACfa,OAAO,CAAC,CAAC;EACT,CAAC,EAAC,CAACP,MAAM,CAAC,CAAC;EAEX,IAAIO,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaT,MAAO,GAAE,CAAC;IACnD,IAAIU,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChCL,OAAO,CAACI,IAAI,CAAC;EACb,CAAC;EAGC,oBACEd,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAKZ;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,EAAIP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAAAjB,EAAA,CAtBKF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAwBd,eAAeA,QAAQ;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}